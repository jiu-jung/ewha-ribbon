package db.model;

import db.view.DB2024Team13_restInfo;

import javax.swing.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;

public class DB2024Team13_restData {
	
	//데이터베이스 DB2024Team13_restaurant에서 데이터를 가져옴
    public static Map<String, List<DB2024Team13_restInfo>> loadBuildingsAndRestaurants(JComboBox<String> buildingDropdown) {
        Map<String, List<DB2024Team13_restInfo>> buildingRestaurantMap = new HashMap<>();
        Map<String, String> buildingSectionMap = new HashMap<>();
        String buildingQuery = "SELECT building, section FROM DB2024_section";
        String restaurantQuery = "SELECT rest_name, location, best_menu, category, breaktime, eat_alone, section_name, " +
                "(SELECT order_count FROM DB2024_rest_order_count WHERE DB2024_rest_order_count.rest_name = DB2024_restaurant.rest_name) as order_count, " +
                "(SELECT avg_rating FROM DB2024_rest_avg_rating WHERE DB2024_rest_avg_rating.rest_name = DB2024_restaurant.rest_name) as avg_rating " +
                "FROM DB2024_restaurant WHERE section_name = ?";

        try (Connection conn = DB2024Team13_connection.getConnection();
             PreparedStatement buildingStmt = conn.prepareStatement(buildingQuery);
             ResultSet buildingRs = buildingStmt.executeQuery()) {

            while (buildingRs.next()) {
                String building = buildingRs.getString("building");
                String section = buildingRs.getString("section");
                buildingDropdown.addItem(building);
                buildingSectionMap.put(building, section);
                buildingRestaurantMap.put(building, new ArrayList<>());
            }

            try (PreparedStatement restaurantStmt = conn.prepareStatement(restaurantQuery)) {
                for (String building : buildingSectionMap.keySet()) {
                    String section = buildingSectionMap.get(building);
                    restaurantStmt.setString(1, section);
                    try (ResultSet restaurantRs = restaurantStmt.executeQuery()) {
                        while (restaurantRs.next()) {
                            DB2024Team13_restInfo restaurant = new DB2024Team13_restInfo(
                                    restaurantRs.getString("rest_name"),
                                    restaurantRs.getString("location"),
                                    restaurantRs.getString("best_menu"),
                                    restaurantRs.getString("category"),
                                    restaurantRs.getBoolean("breaktime"),
                                    restaurantRs.getBoolean("eat_alone"),
                                    restaurantRs.getInt("order_count"),
                                    restaurantRs.getDouble("avg_rating")
                            );
                            buildingRestaurantMap.get(building).add(restaurant);
                        }
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return buildingRestaurantMap;
    }
}
